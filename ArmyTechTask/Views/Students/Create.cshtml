@model ArmyTechTask.Models.Student

@{
    ViewBag.Title = "Create";
}

<style>
    .btn {
        background-color: black;
        color: white;
    }

        .btn:hover {
            color: white;
        }

    table tr th {
        text-align: center;
    }
</style>

<h2 class="text-center">Create Student</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GovernorateId, "GovernorateId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GovernorateId", null, htmlAttributes: new { @class = "form-control", @id = "Governorates" })
                @Html.ValidationMessageFor(model => model.GovernorateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NeighborhoodId, "NeighborhoodId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NeighborhoodId", null, htmlAttributes: new { @class = "form-control", @id = "neighborhoods" })

                @Html.ValidationMessageFor(model => model.NeighborhoodId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FieldId, "FieldId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FieldId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FieldId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn" })

            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script>
    $(function () {
        $('#Governorates').change(function () { // when one changes
            var govId = $(this).children("option:selected").val();
            //alert(selectedCountry);

            var GovInfo = {
                govermentId: govId,
                
            };

            $.ajax({
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                url: "/Students/GetNeighborhoodId",
                type: "POST",
                data: JSON.stringify(GovInfo),
                cache: false,
                dataType: "json",
                //async: false,
                success: function (data) {
                    var htmlOptions = [];
                    //alert(data);

                    for (i = 0; i < data.res.length; i++) {
                        html = '<option value="' + data.res[i].Id + '">' + data.res[i].Name + '</option>';
                        htmlOptions[htmlOptions.length] = html;                    }


                   

                    $("#neighborhoods").empty().append(htmlOptions.join(''));

                },
                error: function (xhr, status, error) {
                    
                    alert("An Error Occured !!!!");
                    
                }

            });
        })
    })
</script>
